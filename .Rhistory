scrape_txt_file <- function(year) {
# Download the file from the website and read its contents
txt_lines <- readLines(paste("https://kenpom.com/cbbga", year, ".txt", sep=""))
# Split each line by tab separator and convert to a dataframe
txt_df <- data.frame(do.call(rbind, strsplit(txt_lines, "\t")), stringsAsFactors = FALSE)
# Return the dataframe
return(txt_df)
}
year <- 23
remove(scrape_txt_file())
devtools::document()
year <- 23
txt_df <- scrape_txt_file(23)
txt_df
View(txt_df)
kenpom_reformat <- function(){
library(tidyverse)
download.file("http://kenpom.com/cbbga22.txt","cbb.txt")
cbb = read.fwf("cbb.txt", widths = c(10,24,4,22,5,3,20))
cbb = tibble(cbb)
## Renaming columns
cbb <- rename(cbb, Date = V1)
cbb <- rename(cbb, Away_team = V2)
cbb <- rename(cbb, Away_score = V3)
cbb <- rename(cbb,Home_team = V4)
cbb <- rename(cbb, Home_score = V5)
## Adding score difference
cbb <- cbb %>%
mutate(score_diff = Home_score - Away_score)
cbb = cbb %>%
mutate(Date = trimws(Date, which = "both"))
## Formatting date
library(lubridate)
cbb <- cbb %>%
mutate(Date = mdy(Date))
## Trimming home and away teams
cbb <- cbb %>%
mutate(Away_team = trimws(Away_team, which = "both"))
cbb <- cbb %>%
mutate(Home_team = trimws(Home_team, which = "both"))
## Arranging by location
cbb <- cbb %>%
mutate(V7 = trimws(V7, which = "both"))
cbb <- cbb %>%
mutate(site = ifelse(is.na(V7),Home_team, V7))
cbb <- cbb %>%
mutate(nuetral = ifelse(is.na(V7),0,1))
cbb <- arrange(cbb, site)
## Removing colums
cbb <- cbb %>% select(!(V6 | V7))
conf_teams <- read.csv("https://raw.githubusercontent.com/Gideonparry/MATH_3190_HW/main/kenpom22_conf.csv")
conf_teams <- conf_teams %>%
mutate(Date = mdy(Date))
cbb <- merge(x = cbb, y = conf_teams, by = c("Date", "Away_team"), all.x = TRUE)
return(cbb)
}
dad <- kenpom_reformat()
library(tidyverse)
library(httr)
library(xml2)
library(stringr)
library(stringdist)
devto
library(httr)
library(xml2)
library(stringr)
library(stringdist)
library(dplyr)
library(tidyr)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
devtools::load_all()
devtools::load_all()
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
library(httr)
library(xml2)
library(stringr)
library(stringdist)
library(dplyr)
library(tidyr)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
rvest::html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
View(test)
usethis::use_r("fetch_and_format_kenpom_data")
library(devtools)
use_r("parse_kenpom_row")
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
parse_kenpom_row(2022)
View(parse_kenpom_row(2022))
?str_sub
?paste0
?GET
?content
?do.call
?%>%
?mutate
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
stringr::substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
parse_kenpom_row <- function(row) {
date <- as.Date(stringr::str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- stringr::str_trim(stringr::str_sub(row, 12, 33))
away_score <- as.integer(stringr::str_trim(stringr::str_sub(row, 34, 37)))
home_team <- stringr::str_trim(stringr::str_sub(row, 39, 60))
home_score <- as.integer(stringr::str_trim(stringr::str_sub(row, 61, 64)))
neutral <- stringr::str_trim(stringr::str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
x <- fetch_and_format_kenpom_data(2022)
?substr
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
x <- fetch_and_format_kenpom_data(2022)
View(x)
use_r("fetch_and_format_warrennolan_data")
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data |>
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data |>
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
x <- fetch_and_format_kenpom_data(2022)
View(x)
sum(isTRUE(x$neutral))
sum(x$neutral)
length(x$neutral)
?read_html
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/",
year, "/net")
warrennolan_data <- xml2::read_html(warrennolan_url) |>
rvest::html_table(header = TRUE, fill = TRUE) |>
.[[1]]
return(warrennolan_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/",
year, "/net")
warrennolan_data <- xml2::read_html(warrennolan_url) %>%
rvest::html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
fetch_and_format_warrennolan_data(2023)
devtools::load_all()
?lapply
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
use_r("match_names")
?trimws
stringdist()
?stringdist
use_r("combine_datasets")
?left_join
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
x <- fetch_and_format_kenpom_data(2023)
x
devtools::document()
devtools::document()
devtools::document()
document()
detach(magrittr)
detach("magrittr")
x <- fetch_and_format_warrennolan_data(2023)
devtools::document()
document()
devtools::document()
devtools::document()
devtools::document()
x <- get_combined_data(2023)
View(x)
