dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
library(httr)
library(xml2)
library(stringr)
library(stringdist)
library(dplyr)
library(tidyr)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
library(rvest)
test <- get_combined_data(2023)
test
library(devtools)
use_github_action()
use_github_action("stat5555sor")
use_github_action("Gideonparry/stat5555sor")
?use_github_action
test
head(test)
use_github_action("stat55sor")
use_github_actions()
use_gpl3_license()
test[1]
test[,1]
test[1]
test[1,]
devtools::load_all()
parse_kenpom_row(test[1,])
test[1,]
use_github_actions()
check()
use_vignette()
?use_vignette
use_vignette("package-vignette", "Package Vignette")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::install_github("Gideonparry/stat5555sor", auth_token = "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", force = TRUE)
test[1,]
test
head(test)
library(stat5555sor)
test <- get_combined_data(2023)
head(test)
devtools::document()
test <- get_combined_data(2023)
head(test)
combined_data <- combined_data |>
dplyr::rowwise() |>
dplyr::mutate(home_sor = sor_points(
Home_score, Away_score, away_NET,
nrow(warrennolan_data), TRUE, neutral
))
devtools::load_all()
test <- get_combined_data(2023)
head(test)
sor_points(56, 65, 206, 358, FALSE, FALSE)
sor_points(65, 56, 206, 305, TRUE, FALSE)
sor_points(65, 56, 305, 206, TRUE, FALSE)
sor_points(65, 56, 305, 358, TRUE, FALSE)
sor_points(65, 56, 206, 358, TRUE, FALSE)
sor_points(65, 56, 305, 358, TRUE, FALSE)
devtools::load_all()
sum_sor(test)
library(stat5555sor)
devtools::load_all()
test <- get_combined_data()
test <- get_combined_data(2023)
sum_sor(test)
head(test)
home_sor <- aggregate(home_sor ~ Home_team, df = test)
home_sor <- aggregate(home_sor ~ Home_team, df = test, sum)
typeof(test)
home_sor <- aggregate(test$home_sor ~ test$Home_team, sum)
home_sor <- aggregate(home_sor ~ Home_team, data = test, sum)
home_sor
library(dplyr)
sum_home_sor_by_team <- home_sor %>%
group_by(Home_team) %>%
summarise(total_home_sor = sum(home_sor)) %>%
arrange(desc(total_home_sor))
sum_home_sor_by_team
away_sor <- aggregate(test$away_sor ~ test$Away_team, sum)
away_sor
away_sor <- aggregate(test$away_sor ~ test$Away_team,data = test, sum)
away_sor
library(stat5555sor)
devtools::load_all()
devtools::install_github("Gideonparry/stat5555sor", auth_token = "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", force = TRUE)
options(repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("vctrs")
library(vctrs)
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
install.packages("dplyr")
install.packages("vctrs")
devtools::check()
test <- get_combined_data(2023)
library(stat5555sor)
devtools::load_all()
install.packages("vctrs")
library(stat5555sor)
library(devtools)
check()
use_vignette(package-vignette, "Package Vignette")
?use_vignette
use_vignette("package-vignette", "Package Vignette")
test <- get_combined_data(2023)
test <- get_combined_data(2023, "03-12-2023")
test <- get_combined_data(2023, "2023-03-12")
head(test)
sor_points(56, 65, 206, 363, FALSE, FALSE)
sum_sor(test)
document()
document()
library(stat5555sor)
?system.file
library(ggplot2)
sum_sor(2023, "2023-03-12")
year2023 <- sum_sor(2023, "2023-03-12")
View(year2023)
load("C:/Users/jeffs/Stat5555/stat5555sor/stat5555sor/data/combined_years.rda")
data("combined_years")
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah", combined_years$Team),]
ggplot(data = df_utah, mapping = aes(x = year, y = SOR))
geom_line() +
scale_color_manual(values = c("blue", "green", "red", "black", )) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
geom_line() +
scale_color_manual(values = c("blue", "green", "red", "black" )) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
ggplot(data = df_utah, mapping = aes(x = year, y = SOR))
geom_line() +
scale_color_manual(values = c("blue", "green", "red", "black" )) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
ggplot(data = df_utah, mapping = aes(x = year, y = SOR)) +
geom_line() +
scale_color_manual(values = c("blue", "green", "red", "black" )) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
library(ggplot2)
# create sample data
x <- 1:10
y1 <- x
y2 <- x^2
y3 <- x^3
df <- data.frame(x = x, y1 = y1, y2 = y2, y3 = y3)
# plot data with separate lines
ggplot(df, aes(x = x, y = y1, group = 1)) +
geom_line(color = "red") +
geom_line(aes(y = y2, group = 2), color = "blue") +
geom_line(aes(y = y3, group = 3), color = "green") +
labs(title = "Separate lines on same graph",
x = "X Axis Label", y = "Y Axis Label")
## Getting data for each year
year_2023 <- sum_sor(2023,"2023-03-12")
year_2022 <- sum_sor(2022,"2022-03-13")
year_2021 <- sum_sor(2021,"2021-03-14")
## Adding year to data before combining
year_2023$year <- rep(2023, nrow(year_2023))
year_2022$year <- rep(2022, nrow(year_2022))
year_2021$year <- rep(2021, nrow(year_2021))
## binding data
combined_years <- rbind(year_2023, year_2022, year_2021)
usethis::use_data(combined_years, overwrite = TRUE)
load("C:/Users/jeffs/Stat5555/stat5555sor/stat5555sor/data/combined_years.rda")
View(combined_years)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber State", combined_years$Team),]
df_utah
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
df_utah
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("^(?!.*Tech).*Utah|BYU|Weber St", combined_years$Team),]
df_utah <- combined_years[grepl("^(?!.*Tech)(Utah|BYU|Weber St)", combined_years$Team),]
df_utah <- combined_years[grepl("^(?!.*Tech)(Utah|BYU|Weber St)$", combined_years$Team),]
df_utah <- combined_years[grepl("^(?!.*Tech)(Utah|BYU|Weber\\sSt)$", combined_years$Team),]
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
df_utah
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
colors <- c("grey", "green", "red", "blue", "black", "purple")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team))) +
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
colors <- c("grey", "green", "red", "blue", "black", "purple")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team))) +
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
colors <- c("grey", "green", "red", "blue", "black", "purple")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team)) +
geom_line() +
scale_color_manual(values = colors) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
# add weber, byu, remove utah tech
data("combined_years")
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
colors <- c("grey", "green", "red", "blue", "black", "purple")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team)) +
geom_line() +
scale_color_manual(values = colors) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team)) +
geom_line() +
scale_color_manual(values = c("grey", "green", "red", "blue", "black", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "Team")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line() +
scale_color_manual(values = c("grey", "green", "red", "blue", "black", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line() +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_color_manual(values = c("grey", "green", "red", "blue", "black", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_color_manual(values = c("grey", "green", "red", "blue", "black", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR")
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seqmin(df_utah$SOR), max(df_utah$SOR), by = 1))
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seqmin(df_utah$SOR), max(df_utah$SOR), by = 1)) +
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(min(df_utah$SOR), max(df_utah$SOR), by = 1)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(by = 1)) +
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(by = 1) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round_down(min(df_utah$SOR)), round_up(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round(min(df_utah$SOR)), round(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
load("C:/Users/jeffs/Stat5555/stat5555sor/stat5555sor/data/games_2023.rda")
data("games_2023")
head(games_2023)
data("rankings_2023")
head(rankings_2023)
library(stat5555sor)
data("combined_years")
colnames(combined_years)
names(combined_years)
class(combined_years)
sapply(combined_years, class)
library(stat5555sor)
# Load dataset from within package
combined_years <- data(combined_years)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
library(stat5555sor)
# Load dataset from within package
combined_years <- data(combined_years)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
data("combined_years")
combined_years
combined_years$Team
library(stat5555sor)
library(dplyr)
# Load dataset from within package
combined_years <- data(combined_years)
# Convert atomic vector to data frame
combined_years <- as.data.frame(combined_years)
# Filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years %>%
filter(grepl("Utah|BYU|Weber St", Team)) %>%
# Exclude Utah Tech
filter(!grepl("Utah Tech", Team))
# Load dataset from within package
combined_years <- data(stat5555sor::combined_years)
# Convert atomic vector to data frame
combined_years <- as.data.frame(combined_years)
# Filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years %>%
select(Team, SOR, ranking, year) %>% # select only columns you need
filter(grepl("Utah|BYU|Weber St", Team)) %>%
# Exclude Utah Tech
filter(!grepl("Utah Tech", Team))
library(stat5555sor)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
colnames(df_utah)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
colnames(df_utah)
# add weber, byu, remove utah tech
data("combined_years")
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
df_utah
# Load dataset from within package
data("combined_years")
library(stat5555sor)
# Load dataset from within package
data("combined_years")
data("combined_years")
combined_years <- data("combined_years")
combined_years
library(stat5555sor)
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# add weber, byu, remove utah tech
data("combined_years")
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round(min(df_utah$SOR)), round(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score for Past Three Seasons", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
library(stat5555sor)
library(stat5555sor)
# Load dataset from within package
data("combined_years")
library(stat5555sor)
library(stat5555sor)
# Load dataset from within package
data("combined_years")
# filter dataset to only include rows where the state column contains "Utah"
df_utah <- combined_years[grepl("Utah|BYU|Weber St", combined_years$Team),]
# exclude Utah Tech
df_utah <- df_utah[!grepl("Utah Tech", df_utah$Team),]
head(df_utah)
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round(min(df_utah$SOR)), round(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score for Past Three Seasons", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
library(ggplot2)
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round(min(df_utah$SOR)), round(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score for Past Three Seasons", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 18, hjust = 0.5))
library(ggplot2)
ggplot(data = df_utah, aes(x = year, y = SOR, group = Team, color = Team)) +
geom_line(size = 1.5) +
scale_x_continuous(breaks = seq(min(df_utah$year), max(df_utah$year), by = 1)) +
scale_y_continuous(breaks = seq(round(min(df_utah$SOR)), round(max(df_utah$SOR))),
labels = function(x) format(x, scientific = FALSE)) +
scale_color_manual(values = c("blue", "black", "red", "grey", "green", "purple")) +
labs(title = "Line Plot Utah Teams SOR Score for Past Three Seasons", x = "Year", y = "SOR") +
theme(plot.title = element_text(size = 16, hjust = 0.5))
library(devtools)
check()
build_vignettes()
build_vignettes()
build_vignettes(build_opts = "--verbose")
build_vignettes(verbose = TRUE)
options(devtools.quiet = FALSE)
build_vignettes()
devtools::check()
install.packages("rmarkdown")
install.packages("rmarkdown")
build_vignettes()
check()
build_vignettes()
rmarkdown::render("vignettes/package-vignette.Rmd", output_format = "pdf_document")
