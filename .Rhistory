return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
devtools::load_all()
devtools::load_all()
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
library(httr)
library(xml2)
library(stringr)
library(stringdist)
library(dplyr)
library(tidyr)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
get_combined_data <- function(year) {
fetch_and_format_kenpom_data <- function(year) {
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
kenpom_url <- paste0("https://kenpom.com/cbbga", substr(year, 3, 4), ".txt")
kenpom_response <- GET(kenpom_url)
kenpom_content <- content(kenpom_response, "text")
kenpom_rows <- str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)], parse_kenpom_row))
kenpom_data <- kenpom_data %>% mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>% mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/", year, "/net")
warrennolan_data <- read_html(warrennolan_url) %>%
rvest::html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
match_names <- function(name, names_to_match) {
name <- trimws(name)
dists <- stringdist(name, names_to_match, method = "jw")
names_to_match[which.min(dists)]
}
combine_datasets <- function(kenpom_data, warrennolan_data) {
# Rename columns in kenpom_data
kenpom_data_renamed <- kenpom_data %>%
rename(Away_team = Away_team,
Home_team = Home_team,
Away_score = Away_score,
Home_score = Home_score,
Date = Date,
neutral = neutral)
# Calculate score_diff and site columns
kenpom_data_renamed <- kenpom_data_renamed %>%
mutate(score_diff = abs(Home_score - Away_score),
site = ifelse(neutral, "Neutral", Home_team),
neutral = ifelse(neutral, 1, 0))
# Join the kenpom_data_renamed with warrennolan_data to get the conference columns
combined_data <- kenpom_data_renamed %>%
left_join(warrennolan_data, by = c("Home_team" = "Team")) %>%
rename(Home_record = Record, home_NET = `NET Rank`) %>%
left_join(warrennolan_data, by = c("Away_team" = "Team")) %>%
rename(Away_record = Record, away_NET = `NET Rank`) %>%
select(Date, Away_team, Away_score, away_NET, Home_team, Home_score, home_NET, score_diff, site, neutral, Home_record, Away_record)
return(combined_data)
}
kenpom_data <- fetch_and_format_kenpom_data(year)
warrennolan_data <- fetch_and_format_warrennolan_data(year)
combined_data <- combine_datasets(kenpom_data, warrennolan_data)
return(combined_data)
}
test <- get_combined_data(2023)
View(test)
usethis::use_r("fetch_and_format_kenpom_data")
library(devtools)
use_r("parse_kenpom_row")
parse_kenpom_row <- function(row) {
date <- as.Date(str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- str_trim(str_sub(row, 12, 33))
away_score <- as.integer(str_trim(str_sub(row, 34, 37)))
home_team <- str_trim(str_sub(row, 39, 60))
home_score <- as.integer(str_trim(str_sub(row, 61, 64)))
neutral <- str_trim(str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
parse_kenpom_row(2022)
View(parse_kenpom_row(2022))
?str_sub
?paste0
?GET
?content
?do.call
?%>%
?mutate
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
stringr::substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
parse_kenpom_row <- function(row) {
date <- as.Date(stringr::str_sub(row, 1, 10), format = "%m/%d/%Y")
away_team <- stringr::str_trim(stringr::str_sub(row, 12, 33))
away_score <- as.integer(stringr::str_trim(stringr::str_sub(row, 34, 37)))
home_team <- stringr::str_trim(stringr::str_sub(row, 39, 60))
home_score <- as.integer(stringr::str_trim(stringr::str_sub(row, 61, 64)))
neutral <- stringr::str_trim(stringr::str_sub(row, 65, 66)) == "N"
return(data.frame(Date = date, Away_team = away_team, Away_score = away_score,
Home_team = home_team, Home_score = home_score, neutral = neutral))
}
x <- fetch_and_format_kenpom_data(2022)
?substr
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data %>%
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
x <- fetch_and_format_kenpom_data(2022)
View(x)
use_r("fetch_and_format_warrennolan_data")
fetch_and_format_kenpom_data <- function(year) {
kenpom_url <- paste0("https://kenpom.com/cbbga",
substr(year, 3, 4), ".txt")
kenpom_response <- httr::GET(kenpom_url)
kenpom_content <- httr::content(kenpom_response, "text")
kenpom_rows <- stringr::str_split(kenpom_content, "\n")[[1]]
kenpom_data <- do.call(rbind, lapply(kenpom_rows[-length(kenpom_rows)],
parse_kenpom_row))
kenpom_data <- kenpom_data |>
dplyr::mutate(Away_team = str_replace_all(Away_team, "St\\.", "State"))
kenpom_data <- kenpom_data |>
dplyr::mutate(Home_team = str_replace_all(Home_team, "St\\.", "State"))
return(kenpom_data)
}
x <- fetch_and_format_kenpom_data(2022)
View(x)
sum(isTRUE(x$neutral))
sum(x$neutral)
length(x$neutral)
?read_html
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/",
year, "/net")
warrennolan_data <- xml2::read_html(warrennolan_url) |>
rvest::html_table(header = TRUE, fill = TRUE) |>
.[[1]]
return(warrennolan_data)
}
fetch_and_format_warrennolan_data <- function(year) {
warrennolan_url <- paste0("https://www.warrennolan.com/basketball/",
year, "/net")
warrennolan_data <- xml2::read_html(warrennolan_url) %>%
rvest::html_table(header = TRUE, fill = TRUE) %>%
.[[1]]
return(warrennolan_data)
}
fetch_and_format_warrennolan_data(2023)
devtools::load_all()
?lapply
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::document()
use_r("match_names")
?trimws
stringdist()
?stringdist
use_r("combine_datasets")
?left_join
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
x <- fetch_and_format_kenpom_data(2023)
x
devtools::document()
devtools::document()
devtools::document()
document()
detach(magrittr)
detach("magrittr")
x <- fetch_and_format_warrennolan_data(2023)
devtools::document()
document()
devtools::document()
devtools::document()
devtools::document()
x <- get_combined_data(2023)
View(x)
library(devtools)
load_all()
x <- get_combined_data(2023)
x
View(x)
x <- fetch_and_format_warrennolan_data(2023)
use_r("home_sor")
View(x)
x <- get_combined_data(2023)
View(x)
TRUE*7
y <- fetch_and_format_warrennolan_data(2023)
nrow(y)
363/2
styler:::style_active_file()
styler:::style_active_file()
0 - TRUE*10
devtools::document()
devtools::document()
home_sor(85,75,150,363)
devtools::document()
home_sor(85,75,150,363)
home_sor(85,75,1,363)
home_sor(85,75,363,363)
home_sor(85,95,363,363)
home_sor(85,95,153,363)
home_sor(85,95,180,363)
home_sor(85,95,179,363)
home_sor(85,95,177,363)
home_sor(85,95,170,363)
home_sor(85,95,171,363)
home_sor(85,95,172,363)
170*2
use_r("away_sor")
devtools::document()
sor_points(89,78,1,363,TRUE)
sor_points(89,78,1,363,FALSE)
devtools::document()
sor_points(89,78,1,363,FALSE)
sor_points(89,78,363,363,FALSE)
sor_points(89,78,363,363,TRUE)
devtools::document()
sor_points(89,78,363,363,TRUE)
sor_points(89,78,1,363,FALSE)
devtools::check()
x$home_sor <- sor_points(x$Home_score, x$Away_score, length(y), TRUE, x$neutral)
devtools::document()
x$home_sor <- sor_points(x$Home_score, x$Away_score, length(y), TRUE, x$neutral)
x$home_sor <- sor_points(x$Home_score, x$Away_score, rep(nrow(y),nrow(x)), rep(TRUE,nrow(x)), x$neutral)
z <- sor_points(x$Home_score, x$Away_score, length(y), TRUE, x$neutral)
z <- c()
for (i in length(z)){
z[i] <- sor_points(x$Home_score[i], x$Away_score[i], norw(y), TRUE, x$neutral[i])
}
View(x)
total_score <- x$Away_score + x$Home_score
View(complete.cases(x))
View(x[complete.cases(x),])
x <- complete.cases(x)
x <- complete.cases(x)
devtools::document()
get_combined_data(2021)
devtools::document()
x <- get_combined_data(2021)
nrow(x)
View(x)
devtools::document()
get_combined_data(2022)
x <- get_combined_data(2022)
View(x)
y <- fetch_and_format_warrennolan_data(2022)
z <- sor_points(x$Home_score, x$Away_score, x$away_NET, nrow(y), TRUE)
x <- dplyr::mutate(x, home_sor = sor_points(x$Home_score, x$Away_score, x$away_NET, nrow(y), TRUE))
colnames(x)
x <- dplyr::mutate(x, home_sor = sor_points(Home_score, Away_score, away_NET, nrow(y), TRUE, nuetral))
x <- dplyr::mutate(x, home_sor = sor_points(Home_score, Away_score, away_NET, nrow(y), TRUE, neutral))
x$home_sor <- sor_points(x$Home_score, x$Away_score, x$away_NET, nrow(y), TRUE, x$neutral)
x <- x %>%
rowwise() %>%
mutate(home_sor = sor_points(Home_score, Away_score, away_NET, nrow(x), TRUE, neutral))
View(x)
sor_points(93,64,101,358,TRUE,0)
x <- x %>%
rowwise() %>%
mutate(home_sor = sor_points(Home_score, Away_score, away_NET, nrow(y), TRUE, neutral))
x <- x |>
rowwise() |>
mutate(home_sor = sor_points(Home_score, Away_score, away_NET, nrow(y), TRUE, neutral))
styler:::style_active_file()
devtools::document()
x <- get_combined_data(2023)
devtools::document()
x <- get_combined_data(2023)
View(x)
sor_points(65, 56, 305, 363, TRUE)
use_test("sor_points")
?sor_points
test_that("Beating best team on the road is worth 1", {
expect_equal(sor_points(85, 50, 1, 360, FALSE), 1)
})
library(testthat)
library(devtools)
test_that("Beating best team on the road is worth 1", {
expect_equal(sor_points(85, 50, 1, 360, FALSE), 1)
})
test_that("Losing to best team on the road is worth 0", {
expect_equal(sor_points(85, 90, 1, 360, FALSE), 0)
})
test_that("Beating worst team at home is worth 0", {
expect_equal(sor_points(85, 40, 360, 360, FALSE), 0)
})
test_that("Beating worst team at home is worth 0", {
expect_equal(sor_points(85, 40, 360, 360, TRUE), 0)
})
test_that("Losing to worst team at home is worth -1", {
expect_equal(sor_points(85, 40, 360, 360, TRUE), -1)
})
test_that("Losing to worst team at home is worth -1", {
expect_equal(sor_points(85, 90, 360, 360, TRUE), -1)
})
(sor_points(85, 90, 150, 300, TRUE, TRUE)
)
sor_points(85, 90, 150.5, 300, TRUE, TRUE)
median(1:363)
test_that("Beating average team on neutral court worth 0.5", {
expect_equal(sor_points(85, 90, 182, 363, TRUE, TRUE), 0.5)
})
test_that("Beating average team on neutral court worth 0.5", {
expect_equal(sor_points(85, 80, 182, 363, TRUE, TRUE), 0.5)
})
test_that("Losing to average team on neutral court worth -0.5", {
expect_equal(sor_points(85, 90, 182, 363, TRUE, TRUE), -0.5)
})
test_that("Neutral Home and neutral away worth the same", {
expect_equal(
sor_points(85, 90, 50, 363, TRUE, TRUE),
sor_points(85, 90, 50, 363, FALSE, TRUE)
)
})
devtools::document()
